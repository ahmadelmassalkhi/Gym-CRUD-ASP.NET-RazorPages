@page
@model Gym.Pages.Memberships.IndexModel

@{
    ViewData["Title"] = "Memberships";
    var popupMessage = TempData["PopupMessage"] as string;
}


<!-- CSS for Setting up Popup Message -->
@if (!string.IsNullOrEmpty(popupMessage))
{
    <div id="popupMessage" class="popup-message">
        @Html.Raw(popupMessage)
    </div>
}


<!-- CSS for Form -->
<style>
    .active-status {
        font-weight: bold;
        font-style: italic;
        padding: 0.5rem;
        border-radius: 0.25rem;
        transition: transform 0.3s ease, box-shadow 0.3s ease; /* Smooth transition */
        cursor: pointer; /* Indicate that it's clickable */
    }

        .active-status:hover {
            transform: scale(1.1); /* Slightly increase the size */
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); /* Add shadow */
        }

    .bg-light-green {
        background-color: #d4edda; /* Bootstrap's light green background color */
    }

    .bg-light-red {
        background-color: #f8d7da; /* Bootstrap's light red background color */
    }

    .divider {
        border-bottom: 2px solid #ccc;
        margin-top: 1rem;
        margin-bottom: 1rem;
    }
</style>


<!-- CSS for Popup Message -->
<style>
    .popup-message {
        display: none; /* Hidden by default */
        position: fixed;
        top: 10%;
        left: 50%;
        transform: translateX(-50%);
        background-color: #d4edda; /* Light green background */
        color: #155724; /* Dark green text */
        padding: 20px 30px; /* More padding for a modern look */
        border-radius: 10px; /* More rounded corners */
        z-index: 1000;
        box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2); /* Soft shadow */
        opacity: 1;
        transition: opacity 1s ease-in-out;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Modern font */
        font-size: 1rem;
    }

        .popup-message.show {
            display: block;
        }

        .popup-message.hide {
            opacity: 0;
        }

    .highlight {
        color: #000000; /* Bright yellow for highlighting */
        font-weight: bold;
    }

    .text-red {
        color: #dc3545; /* Red color for 'deleted' */
        font-weight: bold;
    }

    .text-green {
        color: #28a745; /* Green color for 'created' */
        font-weight: bold;
    }
</style>




<div class="container">
    <h1 class="mt-4 mb-4">All Memberships (@Model.Memberships.Count())</h1>

    <div class="mb-3">
        <a class="btn btn-success" asp-page="Create">Create</a>
    </div>

    <div class="search-section">
        <form method="get" class="form-inline mb-4">
            <div class="form-row align-items-center">
                <div class="col-auto">
                    <input asp-for="FullNameSearchTerm" type="text" value="@Model.FullNameSearchTerm" class="form-control mb-2" placeholder="Search by name" />
                    <input asp-for="PhoneNumberSearchTerm" type="text" value="@Model.PhoneNumberSearchTerm" class="form-control mb-2" placeholder="Search by phone" />
                </div>
                <div class="col-auto mb-2">
                    <select asp-for="IsActiveFilter" class="form-control">
                        <option value="">Any</option>
                        <option value="true">Active</option>
                        <option value="false">Inactive</option>
                    </select>
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-secondary mb-2">Search</button>
                    <button type="button" class="btn btn-outline-secondary mb-2" onclick="clearForm()">Clear</button>
                </div>
            </div>
        </form>
    </div>

    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th> @Html.DisplayNameFor(model => model.Memberships[0].FullName) </th>
                <th> @Html.DisplayNameFor(model => model.Memberships[0].PhoneNumber) </th>
                <th> @Html.DisplayNameFor(model => model.Memberships[0].RegisterDate) </th>
                <th> @Html.DisplayNameFor(model => model.Memberships[0].ExpireDate) </th>
                <th> Status </th>
                <th> Actions </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var membership in Model.Memberships)
            {
                <tr>
                    <td> @membership.FullName </td>
                    <td> @membership.PhoneNumber </td>
                    <td> @membership.RegisterDate.ToString("MM-dd-yyyy") </td>
                    <td> @membership.ExpireDate.ToString("MM-dd-yyyy") </td>
                    <td>
                        <form method="post" asp-page-handler="ToggleStatus" asp-route-id="@membership.Id" style="display:inline;" id="form-@membership.Id">
                            <div class="active-status @(membership.IsActive() ? "bg-light-green" : "bg-light-red") text-center"
                                 onclick="confirmAndSubmit(@membership.Id, '@membership.IsActive()'=='True');">
                                @(membership.IsActive() ? "Active" : "Inactive")
                            </div>
                        </form>
                    </td>
                    <td>
                        <a class="btn btn-sm btn-warning" asp-page="./Edit" asp-route-id="@membership.Id">Edit</a>
                        <a class="btn btn-sm btn-info" asp-page="./Details" asp-route-id="@membership.Id">Details</a>
                        <a class="btn btn-sm btn-danger" asp-page="./Delete" asp-route-id="@membership.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<!-- JavaScript for Form -->
<script>
    function clearForm() {
        document.querySelector('input[name="FullNameSearchTerm"]').value = '';
        document.querySelector('input[name="PhoneNumberSearchTerm"]').value = '';
        document.querySelector('select[name="IsActiveFilter"]').selectedIndex = 0;
        document.querySelector('form').submit();
    }
</script>


<!-- JavaScript for Popup message -->
<script>
    function showPopupMessage() {
        var popup = document.getElementById('popupMessage');
        if (popup) {
            popup.classList.add('show');

            // Start fading out after 1.5 seconds
            setTimeout(function () {
                popup.classList.add('hide');
            }, 1500);

            // Completely hide the popup after the fade-out transition
            setTimeout(function () {
                popup.classList.remove('show');
                popup.classList.remove('hide');
            }, 5000);
        }
    }

    // Call the function to show the popup if there's a message
    window.onload = function () {
        showPopupMessage();
    };
</script>


<!-- JavaScript for activation/deactivation button -->
<script>
    function confirmAndSubmit(id, isActive) {
        var action = isActive ? "deactivate" : "activate";
        var message = `Are you sure you want to ${action} this membership?`;
        if (confirm(message)) {
            // Submit the form
            document.getElementById(`form-${id}`).submit();
        }
    }
</script>
